spring.application.name=moneymanger
# ==============================
# Postgresql Configuration
# ==============================
# JDBC connection URL for Postgresql (from .env variable)
spring.datasource.url=${PROD_DATABASE_URL}
# Database username (from .env variable)
spring.datasource.username=${PROD_DATABASE_USER}
# Database password (from .env variable)
spring.datasource.password=${PROD_DATABASE_PASS}
# Base context path for all API endpoints
server.servlet.context-path=/api/v1.0
# ==============================
# JPA / Hibernate Configuration
# ==============================
# Auto update the table schema when entities are changed
spring.jpa.hibernate.ddl-auto=update
# Show database queries in terminal (true/false)
spring.jpa.show-sql=true
# Format SQL queries for readability in logs
spring.jpa.properties.hibernate.format_sql=true
# ==============================
# Email (SMTP) Configuration
# ==============================
# SMTP server host(Brevo in this case)
spring.mail.host=smtp-relay.brevo.com
# Port for SMTP with STARTTLS
spring.mail.port=587
# SMTP login username (from .env variable)
spring.mail.username=${MAIL_USERNAME}
# SMTP login password (from .env variable)
spring.mail.password=${MAIL_PASSWORD}
# Enable authentication for SMTP
spring.mail.properties.mail.smtp.auth=true
# Enable STARTTLS (TLS encryption for emails)
spring.mail.properties.mail.smtp.starttls.enable=true
# Protocol used for sending emails
spring.mail.protocol=smtp
# Default "from" email address when sending mails
spring.mail.properties.mail.smtp.from=${MAIL_FROM_ADDRESS}
# ==============================
# JWT Configuration
# ==============================
jwt.secret=${JWT_SECRET_KEY}
jwt.expiration=3600000

#Frontend Url
money.manager.frontend.url=${MONEY_MANAGER_FRONTEND_URL}

#Backend Url
app.activation.url=${MONEY_MANAGER_BACKEND_URL}

# Brevo API
brevo.api.key=${MAIL_API_KEY}
brevo.sender.email=${MAIL_FROM_ADDRESS}
brevo.sender.name=MoneyManager

